// <auto-generated />
using System;
using EfCoreTut;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EfCoreTut.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodeFirstApproach.Entities.Role", b =>
                {
                    b.Property<Guid>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRole")
                        .HasName("PK_Role");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("CodeFirstApproach.Entities.Subject", b =>
                {
                    b.Property<Guid>("IdSubject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSubject")
                        .HasName("PK_Subject");

                    b.ToTable("Subject", (string)null);
                });

            modelBuilder.Entity("CodeFirstApproach.Entities.User", b =>
                {
                    b.Property<Guid>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdRole")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUser")
                        .HasName("PK_User");

                    b.HasIndex("IdRole");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("CodeFirstApproach.Entities.UserSubject", b =>
                {
                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSubject")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("IdUser", "IdSubject")
                        .HasName("PK_UserSubject");

                    b.HasIndex("IdSubject");

                    b.ToTable("UserSubject", (string)null);
                });

            modelBuilder.Entity("CodeFirstApproach.Entities.User", b =>
                {
                    b.HasOne("CodeFirstApproach.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CodeFirstApproach.Entities.UserSubject", b =>
                {
                    b.HasOne("CodeFirstApproach.Entities.Subject", "Subject")
                        .WithMany("UserSubjects")
                        .HasForeignKey("IdSubject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("UserSubject_Subject_FK");

                    b.HasOne("CodeFirstApproach.Entities.User", "User")
                        .WithMany("UserSubjects")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("UserSubject_User_FK");

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CodeFirstApproach.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CodeFirstApproach.Entities.Subject", b =>
                {
                    b.Navigation("UserSubjects");
                });

            modelBuilder.Entity("CodeFirstApproach.Entities.User", b =>
                {
                    b.Navigation("UserSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
